{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidlporter/Desktop/Capstone/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport { useFonts, Poppins_400Regular } from \"@expo-google-fonts/poppins\";\nimport { AppLoading } from \"expo\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport default function App() {\n  var handlePress = function handlePress() {\n    return console.log(\"I pressed it\");\n  };\n\n  console.log(require(\"./assets/icon.png\"));\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {}\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"USC Visitors Prototype\"), React.createElement(Text, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"David, Sarah, Morice\"), React.createElement(View, {\n    style: styles.viewStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return console.log(\"hello\");\n    },\n    style: styles.homeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"./assets/undrawMap.png\"),\n    style: {\n      height: 200,\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.viewStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return alert(\"Begone Naysayers!\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \" Click Me \"))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"maroon\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  homeImage: {\n    elevation: 4,\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowColor: \"grey\",\n    shadowOpacity: 0.5,\n    shadowRadius: 15,\n    margin: \"1rem\",\n    paddingTop: \"1rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    borderRadius: 50\n  },\n  button: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 50\n  },\n  buttonText: {\n    color: \"black\",\n    textTransform: \"uppercase\"\n  },\n  viewStyle: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/davidlporter/Desktop/Capstone/App.js"],"names":["StatusBar","useState","useFonts","Poppins_400Regular","AppLoading","React","App","handlePress","console","log","require","fontsLoaded","error","styles","container","fontSize","viewStyle","homeImage","height","width","button","alert","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","elevation","shadowOffset","shadowColor","shadowOpacity","shadowRadius","margin","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","padding","color","textTransform"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport { useFonts, Poppins_400Regular } from \"@expo-google-fonts/poppins\";\nimport { AppLoading } from \"expo\";\nimport React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  Image,\n  View,\n  SafeAreaView,\n  Button,\n  Alert,\n} from \"react-native\";\n\nexport default function App() {\n  const handlePress = () => console.log(\"I pressed it\");\n  console.log(require(\"./assets/icon.png\"));\n\n  let [fontsLoaded, error] = useFonts({\n    Poppins_400Regular,\n  });\n\n  if (!fontsLoaded) {\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={{ fontSize: \"24px\" }}>USC Visitors Prototype</Text>\n      <Text onPress={handlePress}>David, Sarah, Morice</Text>\n\n      <View style={styles.viewStyle}>\n        <TouchableOpacity\n          onPress={() => console.log(\"hello\")}\n          style={styles.homeImage}\n        >\n          <Image\n            source={require(\"./assets/undrawMap.png\")}\n            style={{\n              height: 200,\n              width: 200,\n            }}\n          />\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.viewStyle}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => alert(\"Begone Naysayers!\")}\n        >\n          <Text style={styles.buttonText}> Click Me </Text>\n        </TouchableOpacity>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"maroon\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  homeImage: {\n    elevation: 4,\n    shadowOffset: { width: 5, height: 5 },\n    shadowColor: \"grey\",\n    shadowOpacity: 0.5,\n    shadowRadius: 15,\n    margin: \"1rem\",\n    paddingTop: \"1rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    borderRadius: 50,\n  },\n\n  button: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 50,\n  },\n\n  buttonText: {\n    color: \"black\",\n    textTransform: \"uppercase\",\n  },\n\n  viewStyle: {\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}